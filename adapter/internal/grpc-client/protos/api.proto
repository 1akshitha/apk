/*
Copyright 2022.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
option go_package = "github.com/Tharsanan1/grpc-agent/grpc/api";
package wso2.agent.api;
service APIService {
    rpc createAPI(API) returns (Response);
    rpc updateAPI(API) returns (Response);
    rpc deleteAPI(API) returns (Response);
}

message API {
    string uuid = 1;
    string provider = 2;
    string version = 3;
    string name = 4;
    string context = 5;
    string type = 6;
    string organizationId = 7;
    string createdBy = 8;
    string createdTime = 9;
    string updatedBy = 10;
    string updatedTime = 11;
    string definition = 12;
    repeated string transport = 13; 
    EndpointConfig endpointConfig = 14;
    repeated Resource resources = 16;
    CorsConfiguration corsConfiguration = 17;
}

message EndpointConfig {
    string type = 1;
    string productionUrl = 2;
    string sandboxUrl = 3;
}

message CorsConfiguration {
    bool corsConfigurationEnabled = 1;
    repeated string accessControlAllowOrigins = 2;
    bool accessControlAllowCredentials = 3;
    repeated string accessControlAllowHeaders = 4;
    repeated string accessControlAllowMethods = 5;
}

message Resource {
    string path = 1;
    string verb = 2;
    repeated Authentication authentications = 3;  
    repeated Scope scopes = 4;
    RateLimit rateLimit = 5;
    OperationPolicies operationPolicies = 6;
    repeated QueryParam queryParams = 7;
    repeated string hostname = 8;
}

message OperationPolicies {}

message Backend {
    string type = 1;
    string url = 2;
}

message QueryParam {
    string name = 1;
    string value = 2;
}


message Scope {
    string name = 1;
    string displayName = 2;
    string description = 3;
    repeated string bindings = 4;
}


message Authentication {
    string type = 1;
    string iss = 2;
    string aud = 3;
    string jwksUri = 4;
    repeated Credential credentialList = 5;
}

message Credential {
    string username = 1;
    string password = 2;
}

message RateLimit { 
    string requestPerUnit = 1;
    string unit = 2;
}

message Response {
    bool result = 1;
}
